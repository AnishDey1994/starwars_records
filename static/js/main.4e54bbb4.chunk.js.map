{"version":3,"sources":["assets/images/rocketLogo.gif","components/UX-Loader/UXLoader.jsx","App.js","reportWebVitals.js","index.js"],"names":["UXLoader","props","className","fullPageOverlay","loaderType","src","starWarLoader","alt","Header","lazy","ShowRecords","App","fallback","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oIAAe,MAA0B,uC,eCuB1BA,IAnBE,SAAAC,GACb,OACI,qBAAKC,UAAWD,EAAME,gBAAkB,kBAAoB,KAA5D,SACI,qBAAKD,UAAgC,QAArBD,EAAMG,WAAuB,mBAAqB,gBAAlE,SAEQH,EAAMG,YAAmC,QAArBH,EAAMG,WACtB,qBAAKC,IAAKC,EAAeJ,UAAU,YAAYK,IAAI,cACjD,qBAAKL,UAAU,iB,oMCPnCM,EAASC,gBAAK,kBAAM,gCACpBC,EAAcD,gBAAK,kBAAM,sDAchBE,MAbf,SAAaV,GACZ,OACC,qBAAKC,UAAU,MAAf,SACC,cAAC,WAAD,CAAUU,SAAU,cAACZ,EAAA,EAAD,CAAUG,iBAAiB,EAAMC,WAAW,QAAhE,SACC,sBAAKS,GAAG,cAAR,UACC,cAACL,EAAD,IACA,cAACE,EAAD,eAAiBT,YCAPa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.4e54bbb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rocketLogo.02c2a53e.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport starWarLoader from '../../assets/images/rocketLogo.gif';\r\nimport './UXLoader.scss';\r\nconst UXLoader = props => {\r\n    return (\r\n        <div className={props.fullPageOverlay ? 'fullPageOverlay' : null}>\r\n            <div className={props.loaderType === 'img' ? 'imgLoaderWrapper' : 'loaderWrapper'}>\r\n                {\r\n                    props.loaderType && props.loaderType === 'img' ?\r\n                        <img src={starWarLoader} className='imgLoader' alt='loading..'></img>\r\n                        : <div className='loader'></div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUXLoader.propTypes = {\r\n    fullPageOverlay: PropTypes.bool,\r\n    loaderType: PropTypes.string\r\n};\r\n\r\nexport default UXLoader;","import React, { Suspense, lazy } from 'react';\nimport UXLoader from './components/UX-Loader/UXLoader';\nimport './assets/css/UXCoreCSS.css';\nimport './App.scss';\nconst Header = lazy(() => import('./widgets/HeaderWidget/header'));\nconst ShowRecords = lazy(() => import('./widgets/ShowRecordsWidget/showRecords'));\nfunction App(props) {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Suspense fallback={<UXLoader fullPageOverlay={true} loaderType='img' />}>\n\t\t\t\t<div id=\"mainContent\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<ShowRecords {...props} />\n\t\t\t\t</div>\n\t\t\t</Suspense>\n\t\t</div >\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}